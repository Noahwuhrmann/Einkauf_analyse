#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Wed Dec  4 01:13:05 2024@author: noahwuhrmann"""# Verison 5import pandas as pdimport streamlit as stimport reimport io# Streamlit Appst.title("Excel Sortier- und Exporttool")# Dateiuploaduploaded_file = st.file_uploader("Bitte eine Excel-Datei hochladen", type=["xlsx"])if uploaded_file:    # Mitteilung über erfolgreichen Upload    st.success("Die Datei wurde erfolgreich hochgeladen.")        # Datei in einen DataFrame laden    try:        df = pd.read_excel(uploaded_file, engine='openpyxl')                # Spaltennamen definieren        fixed_columns = ["Bestand", "Artikelname", "KatalogNr", "Artikel", "Artikelgruppe", "Netto"]                # Monatsspalten erkennen        month_columns = []        month_pattern = re.compile(r"(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s?\d{4}")        # Überprüfen, welche Spalten Monatsspalten sind        for col in df.columns:            if month_pattern.match(col):                month_columns.append(col)        # Zielspalten in der richtigen Reihenfolge        # Die ursprüngliche Reihenfolge der Spalten bleibt erhalten, Monatsspalten werden am Ende angefügt        target_columns = [col for col in df.columns if col not in month_columns] + month_columns        # Erstellen des neuen DataFrames mit den gefilterten Spalten        filtered_df = df[target_columns]                # Nutzer auffordern, den Dateinamen anzugeben        output_filename = st.text_input("Bitte geben Sie einen Namen für die exportierte Datei ein (ohne .xlsx):", value="Exportierte_Datei")                if st.button("Excel-Datei exportieren"):            # Excel-Datei speichern und als Download anbieten            buffer = io.BytesIO()            with pd.ExcelWriter(buffer, engine='openpyxl') as writer:                filtered_df.to_excel(writer, index=False, sheet_name="Export")            st.success(f"Die Datei '{output_filename}.xlsx' wurde erfolgreich erstellt und ist bereit zum Herunterladen.")            st.download_button(                label="Herunterladen",                data=buffer.getvalue(),                file_name=f"{output_filename}.xlsx",                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"            )    except Exception as e:        st.error(f"Ein Fehler ist aufgetreten: {e}")
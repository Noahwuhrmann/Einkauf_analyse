#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Wed Dec  4 01:13:05 2024@author: noahwuhrmann"""# V9import pandas as pdimport streamlit as stimport reimport io# Streamlit Appst.title("Excel Sortier- und Exporttool")# Dateiuploaduploaded_file = st.file_uploader("Bitte eine Excel-Datei hochladen", type=["xlsx"])if uploaded_file:    # Mitteilung über erfolgreichen Upload    st.success("Die Datei wurde erfolgreich hochgeladen.")    # Datei in einen DataFrame laden    try:        df = pd.read_excel(uploaded_file, engine="openpyxl")        # Fixe Spalten definieren        fixed_columns = ["Bestand", "Artikelname", "KatalogNr", "Artikel", "Artikelgruppe", "Netto"]        # Jahres-Spalten dynamisch erkennen (z.B. 2024, 2023, etc.)        year_pattern = re.compile(r"^\d{4}$")        year_columns = [col for col in df.columns if year_pattern.match(col)]        # Muster für deutsche Monate        month_pattern = re.compile(            r"(Jan|Feb|Mär|Apr|Mai|Jun|Jul|Aug|Sep|Okt|Nov|Dez) \d{4}"        )        # Spalten für Monate identifizieren        month_columns = [col for col in df.columns if month_pattern.match(col)]        # Zielspalten in der richtigen Reihenfolge zusammenstellen        target_columns = fixed_columns + year_columns + month_columns        # Spalten filtern und beibehalten        filtered_df = df[[col for col in target_columns if col in df.columns]]        # Nutzer auffordern, den Dateinamen anzugeben        output_filename = st.text_input(            "Bitte geben Sie einen Namen für die exportierte Datei ein (ohne .xlsx):",            value="Exportierte_Datei",        )        if st.button("Excel-Datei exportieren"):            # Excel-Datei speichern            output = io.BytesIO()            with pd.ExcelWriter(output, engine="openpyxl") as writer:                filtered_df.to_excel(writer, index=False, sheet_name="Export")            st.success(                f"Die Datei '{output_filename}.xlsx' wurde erfolgreich erstellt und ist bereit zum Herunterladen."            )            st.download_button(                label="Herunterladen",                data=output.getvalue(),                file_name=f"{output_filename}.xlsx",                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",            )    except Exception as e:        st.error(f"Ein Fehler ist aufgetreten: {e}")